{"version":3,"sources":["Components/Ground/Ground.tsx","Store/useControlsStore.ts","Components/GlobalListeners/KeyListener.tsx","Components/GlobalListeners/index.tsx","Components/Camera/ThirdPersonCamera.tsx","Hooks/usePlayerControls.ts","Components/Character/CharacterController.tsx","Components/Character/Character.tsx","App.tsx","index.tsx"],"names":["Ground","props","usePlane","rotation","Math","PI","position","type","ref","receiveShadow","attach","args","color","useControlsStore","create","set","keyBinds","moveForward","moveBackwards","moveLeft","moveRight","down","toggleDown","keyCode","newState","state","KeyListener","useEffect","keyDown","e","code","keyUp","document","addEventListener","removeEventListener","GlobalListeners","targetWorldPosition","target","getWorldPosition","ThirdPersonCamera","lookAt","useRef","Vector3","camera","useThree","useFrame","delta","targetObj","current","idealOffset","applyQuaternion","quaternion","add","y","calculateIdealOffset","idealLookat","calculateIdealLookat","t","lerp","copy","usePlayerControls","movement","moveBackward","sub","subscribe","unsubForward","unsubBackward","unsubRight","unsubLeft","CharacterController","deceleration","acceleration","velocity","newVelocity","frameDecceleration","x","z","multiplyScalar","sign","min","abs","controlObject","Q","Quaternion","A","R","clone","acc","setFromAxisAngle","multiply","oldPosition","forward","normalize","sideways","Character","castShadow","App","id","gravity","scale","Sky","sunPosition","intensity","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.943dc2b0.chunk.js","sourcesContent":["import React from 'react';\nimport { usePlane } from '@react-three/cannon';\n\ntype Props = {\n    //\n};\n\nconst Ground: React.FC<Props> = props => {\n    const [ref] = usePlane(() => ({\n        rotation: [-Math.PI / 2, 0, 0],\n        position: [0, -1, 0],\n        type: 'Static',\n        ...props,\n    }));\n    return (\n        <mesh ref={ref} receiveShadow>\n            <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n            <meshStandardMaterial attach=\"material\" color=\"blue\" />\n        </mesh>\n    );\n};\n\nexport default Ground;\n","import create from 'zustand';\n\ntype ControlsState = {\n    keyBinds: {\n        moveForward: string;\n        moveBackwards: string;\n        moveLeft: string;\n        moveRight: string;\n    };\n    down: Record<string, boolean>;\n    toggleDown: (keyCode: string, newState: boolean) => void;\n};\n\nconst useControlsStore = create<ControlsState>(set => ({\n    keyBinds: {\n        moveForward: 'KeyW',\n        moveBackwards: 'KeyS',\n        moveLeft: 'KeyA',\n        moveRight: 'KeyD',\n    },\n    down: {},\n    toggleDown: (keyCode, newState) =>\n        set(state => ({ ...state, down: { ...state.down, [keyCode]: newState } })),\n}));\n\nexport default useControlsStore;\n","import React, { useEffect } from 'react';\nimport { useControlsStore } from 'store';\n\nconst KeyListener: React.FC = () => {\n    const { toggleDown } = useControlsStore();\n    useEffect(() => {\n        const keyDown = (e: KeyboardEvent) => {\n            toggleDown(e.code, true);\n        };\n        const keyUp = (e: KeyboardEvent) => {\n            toggleDown(e.code, false);\n        };\n        document.addEventListener('keydown', keyDown, false);\n        document.addEventListener('keyup', keyUp, false);\n\n        return () => {\n            document.removeEventListener('keydown', keyDown);\n            document.removeEventListener('keyup', keyUp);\n        };\n    }, [toggleDown]);\n\n    return null;\n};\n\nexport default KeyListener;\n","import React from 'react';\nimport KeyListener from './KeyListener';\n\nconst GlobalListeners = () => (\n    <>\n        <KeyListener />\n    </>\n);\n\nexport default GlobalListeners;\n","import React, { useRef } from 'react';\nimport { Mesh, Vector3 } from 'three';\nimport { useFrame, useThree } from '@react-three/fiber';\n\ntype Props = {\n    target: React.MutableRefObject<Mesh | undefined>;\n};\n\nfunction targetWorldPosition(target: Mesh) {\n    return target.getWorldPosition(target.position);\n}\n\nfunction calculateIdealOffset(target: Mesh) {\n    const idealOffset = new Vector3(-0, 10, -15);\n    idealOffset.applyQuaternion(target.quaternion);\n    idealOffset.add(targetWorldPosition(target));\n\n    // idealOffset.y = Math.max(idealOffset.y, terrain.GetHeight(idealOffset)[0] + 5.0);\n    idealOffset.y = 5;\n\n    return idealOffset;\n}\n\nfunction calculateIdealLookat(target: Mesh) {\n    const idealLookat = new Vector3(0, 5, 20);\n    idealLookat.applyQuaternion(target.quaternion);\n    idealLookat.add(targetWorldPosition(target));\n    return idealLookat;\n}\n\nconst ThirdPersonCamera: React.FC<Props> = ({ target }) => {\n    const lookAt = useRef(new Vector3());\n    const position = useRef(new Vector3());\n    const { camera } = useThree();\n\n    useFrame((state, delta) => {\n        const targetObj = target.current;\n\n        if (!targetObj) {\n            return;\n        }\n\n        const idealOffset = calculateIdealOffset(targetObj);\n        const idealLookat = calculateIdealLookat(targetObj);\n\n        // const t = 0.05;\n        // const t = 4.0 * timeElapsed;\n        const t = 1.0 - 0.01 ** delta;\n        // const t = 1.0 - Math.pow(0.01, delta);\n\n        // console.log(idealOffset);\n\n        // console.log(target.position);\n\n        position.current.lerp(idealOffset, t);\n        lookAt.current.lerp(idealLookat, t);\n\n        camera.position.copy(position.current);\n        camera.lookAt(lookAt.current);\n    });\n    return null;\n};\n\nexport default ThirdPersonCamera;\n","import { useEffect, useRef } from 'react';\nimport { useControlsStore } from 'store';\n\nfunction usePlayerControls() {\n    const movement = useRef({\n        moveForward: false,\n        moveBackward: false,\n        moveLeft: false,\n        moveRight: false,\n    });\n    const sub = useControlsStore.subscribe;\n    const { keyBinds } = useControlsStore();\n\n    useEffect(() => {\n        const onForwardDown = (newState: boolean) => {\n            movement.current.moveForward = newState;\n        };\n        const onBackwardDown = (newState: boolean) => {\n            movement.current.moveBackward = newState;\n        };\n        const onRightDown = (newState: boolean) => {\n            movement.current.moveRight = newState;\n        };\n        const onLeftDown = (newState: boolean) => {\n            movement.current.moveLeft = newState;\n        };\n        const unsubForward = sub(onForwardDown, state => state.down[keyBinds.moveForward]);\n        const unsubBackward = sub(onBackwardDown, state => state.down[keyBinds.moveBackwards]);\n        const unsubRight = sub(onRightDown, state => state.down[keyBinds.moveRight]);\n        const unsubLeft = sub(onLeftDown, state => state.down[keyBinds.moveLeft]);\n        return () => {\n            //\n            unsubForward();\n            unsubBackward();\n            unsubRight();\n            unsubLeft();\n        };\n    }, [sub, keyBinds, movement]);\n\n    return movement;\n}\n\nexport default usePlayerControls;\n","import React, { useRef } from 'react';\nimport { Vector3, Quaternion, Mesh } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport { usePlayerControls } from 'hooks';\n\ntype Props = {\n    target: React.MutableRefObject<Mesh | undefined>;\n    // api: WorkerApi;\n};\n\nconst CharacterController: React.FC<Props> = ({ target }) => {\n    const deceleration = useRef(new Vector3(-0.0005, -0.0001, -5));\n    const acceleration = useRef(new Vector3(1, 0.25, 50.0));\n    const velocity = useRef(new Vector3(0, 0, 0));\n    // const velocity = useRef([0, 0, 0]);\n    const movement = usePlayerControls();\n\n    useFrame((state, delta) => {\n        if (!target.current) {\n            return;\n        }\n\n        const { moveForward, moveRight, moveLeft, moveBackward } = movement.current;\n\n        const newVelocity = velocity.current;\n        const frameDecceleration = new Vector3(\n            newVelocity.x * deceleration.current.x,\n            newVelocity.y * deceleration.current.y,\n            newVelocity.z * deceleration.current.z,\n        );\n        frameDecceleration.multiplyScalar(delta);\n        frameDecceleration.z =\n            Math.sign(frameDecceleration.z) *\n            Math.min(Math.abs(frameDecceleration.z), Math.abs(newVelocity.z));\n\n        newVelocity.add(frameDecceleration);\n\n        const controlObject = target.current;\n        const Q = new Quaternion();\n        const A = new Vector3();\n        const R = controlObject.quaternion.clone();\n\n        const acc = acceleration.current.clone();\n        // we.g. if hold shift, run faster\n        // if (sprint) {\n        //     acc.multiplyScalar(2.0);\n        // }\n\n        if (moveForward) {\n            newVelocity.z += acc.z * delta;\n        }\n        if (moveBackward) {\n            newVelocity.z -= acc.z * delta;\n        }\n\n        if (moveLeft) {\n            A.set(0, 1, 0);\n            Q.setFromAxisAngle(A, 4.0 * Math.PI * delta * acceleration.current.y);\n            R.multiply(Q);\n        }\n        if (moveRight) {\n            A.set(0, 1, 0);\n            Q.setFromAxisAngle(A, 4.0 * -Math.PI * delta * acceleration.current.y);\n            R.multiply(Q);\n        }\n\n        controlObject.quaternion.copy(R);\n\n        const oldPosition = new Vector3();\n\n        const forward = new Vector3(0, 0, 1);\n        forward.applyQuaternion(controlObject.quaternion);\n        forward.normalize();\n\n        const sideways = new Vector3(1, 0, 0);\n        sideways.applyQuaternion(controlObject.quaternion);\n        sideways.normalize();\n\n        sideways.multiplyScalar(newVelocity.x * delta);\n        forward.multiplyScalar(newVelocity.z * delta);\n\n        // api.velocity.\n        controlObject.position.add(forward);\n        controlObject.position.add(sideways);\n\n        oldPosition.copy(controlObject.position);\n    });\n\n    return null;\n};\n\nexport default CharacterController;\n","import React, { useRef } from 'react';\nimport { Mesh } from 'three';\nimport { ThirdPersonCamera } from 'components/Camera';\nimport CharacterController from './CharacterController';\n\ntype Props = {\n    //\n};\n\nconst Character: React.FC<Props> = () => {\n    const ref = useRef<Mesh>();\n\n    return (\n        <>\n            <mesh ref={ref} castShadow receiveShadow>\n                <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n                <meshStandardMaterial color=\"red\" />\n            </mesh>\n            <ThirdPersonCamera target={ref} />\n            <CharacterController target={ref} />\n        </>\n    );\n};\n\nexport default Character;\n","import React from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { Sky } from '@react-three/drei';\nimport { Physics, Debug } from '@react-three/cannon';\nimport './App.css';\nimport { Character, GlobalListeners, Ground } from 'components';\n\nfunction App() {\n    return (\n        <div id=\"app\">\n            <GlobalListeners />\n            <Canvas>\n                <Physics gravity={[0, -30, 0]}>\n                    <Debug color=\"green\" scale={1.1}>\n                        <Sky sunPosition={[100, 20, 100]} />\n                        <ambientLight intensity={0.25} />\n                        <pointLight castShadow intensity={0.7} position={[100, 100, 100]} />\n                        <Character />\n                        <Ground />\n                    </Debug>\n                </Physics>\n            </Canvas>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}